# Build and Publish to Sandbox

name: Sandbox Build and Deployment
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      versionName:
        description: Specify Release branch version number
        required: true
      choice:
        type: choice
        description: Select to Build or BuildandDeploy
        options:
        - Build
        - BuildandDeploy

jobs:
  
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: 'release/v${{github.event.inputs.versionName}}'
          
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
      - name: Cache dependencies   
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml -DskipTests
        
      - name: Stamp artifact file name with commit hash
        run: |
          artifactName=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactNameWithCommitHash=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName $artifactNameWithCommitHash
          
      - name: Upload a Build Artifact 
        uses: actions/upload-artifact@v3.1.0
        with:
            name: artifacts
            path: target/*.jar    
            
  deploy:
    if: "${{ github.event.inputs.choice == 'BuildandDeploy' }}"
    needs: build
    runs-on: ubuntu-latest
    environment: Sandbox
    
    steps:
    
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
          ref: 'release/v${{github.event.inputs.versionName}}'
      
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - uses: actions/download-artifact@v3.0.0
      with:
          name: artifacts
          
    - name: Deploy to Sandbox Cloudhub
      env:
        CLIENT_ID: ${{ secrets.CONNECTEDAPP_CLIENTID }}
        CLIENT_SECRET: ${{ secrets.CONNECTEDAPP_CLIENTSECRET }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Dapp.runtime=4.4.0 \
         -Dclientid="$CLIENT_ID" \
         -Dclientsecret="$CLIENT_SECRET" \
         -Denvironment=Sandbox \
         -Dcloudhub.application.name=anshutest2185 \
         -DskipTests      
