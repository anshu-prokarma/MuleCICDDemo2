# This is the manual pipeline which helps in creating release branch from dev. The release branch will be used for deploying to sandbox environment.

name: Create Release Branch

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Define version number (e.g. 1.0.0)'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "createrelease" for creating release branch
  createrelease:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: 'dev'

      - name: Create release branch
        run: git checkout -b release/v${{github.event.inputs.versionName}}
        
      - name: Generate changelog
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        
      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1.6.0
        with:
          release-notes: 'Sandox released verson: '
          latest-version: ${{github.event.inputs.versionName}}
          
     # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
          
      - name: Commit changelog and manifest files
        id: make-commit
        run: |
          git add CHANGELOG.md
          git commit --message "Prepare release ${{ github.event.inputs.versionName }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
          
      - name: Push new branch
        run: git push origin release/v${{ github.event.inputs.versionName }}
